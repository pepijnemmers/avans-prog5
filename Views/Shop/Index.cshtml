@using NinjaApp.Models.Enums
@model NinjaApp.ViewModels.ShopViewModel
@{
    ViewData["Title"] = "Shop";
    var breadcrumbs = new Dictionary<string, string>
    {
        { "Shop", "/shop" }
    };
    
    if (Model.Ninja != null)
    {
        breadcrumbs = new Dictionary<string, string>
        {
            { Model.Ninja.Name, $"/inventory/{Model.Ninja.Id}" },
            { "Shop", "/shop" }
        };
    }
}

<component type="typeof(NinjaApp.Views.Components.TitleAndBreadcrumb)"
           render-mode="Static"
           param-breadcrumbs="@breadcrumbs" />

<div class="d-flex justify-content-between align-items-center flex-wrap">
    <h1>@ViewData["Title"]</h1>
    <div class="d-flex align-items-center gap-2">
        @if (Model.Ninja != null)
        {
            <div class="value-badge gold" data-bs-toggle="tooltip" data-bs-title="Gold">
                <div>@Model.Ninja.Gold</div>
            </div>
        }
        @if (Model.AllNinjas != null && Model.AllNinjas.Count > 0)
        {
            <div>
                <select id="selectedNinja" class="form-select" onchange="redirectToShop(this)" data-bs-target="tooltip" title="Selecteer een ninja">
                    <option value="" disabled selected="@(Model.Ninja == null ? "true" : "false")">Selecteer een ninja</option>
                    @foreach (var ninja in Model.AllNinjas)
                    {
                    if (Model.Ninja?.Id == ninja.Id)
                    {
                    <option value="@ninja.Id" selected>@ninja.Name</option>
                    }
                    else
                    {
                    <option value="@ninja.Id">@ninja.Name</option>
                    }
                    }
                </select>
            </div>
        }
        @if (Model.Ninja != null)
        {
            <a href="/inventory/@Model.Ninja.Id" class="btn btn-primary">Bekijk Ninja</a>
        }
    </div>
</div>
<p class="mb-3">Koop of verkoop hier equipment voor één van je ninja's.</p>

@if (Model.Ninja == null)
{
    <div class="custom-card">
        <div class="card-body">
            <p class="py-5 m-0 text-center text-clr-ter">
                <i class="fas fa-info-circle me-1"></i>
                @if (Model.AllNinjas == null || Model.AllNinjas.Count == 0)
                {
                    <span>Er zijn nog geen ninja's aangemaakt. Klik <a asp-controller="Home" asp-action="Create">hier</a> om een nieuwe ninja aan te maken.</span>
                }
                else
                {
                    <span>Er is nog geen ninja geselecteerd. Selecteer in het dropdown menu hierboven een ninja.</span>
                }
            </p>
        </div>
    </div>
}
else
{
<ul class="nav nav-tabs mb-3" id="myTab" role="tablist">
    @foreach (var category in Model.SlotCategories)
    {
        <li class="nav-item" role="presentation">
            <button class="nav-link @(category == (Model.SelectedSlotCategory ?? SlotCategory.Head) ? "active" : "")"
                    data-bs-toggle="tab" data-bs-target="#@category-tab-pane" type="button"
                    role="tab" aria-selected="true" onclick="addCategoryToUrl('@category')">
                @category.ToFriendlyString()
            </button>
        </li>
    }
</ul>

<div class="tab-content" id="myTabContent">
    @foreach (var category in Model.SlotCategories)
    {
        var currentEquipment = Model.Ninja.Inventory.FirstOrDefault(e => e.Equipment.Category == category)?.Equipment;
        var sellPrice = Model.Orders?.Find(o => o.EquipmentId == currentEquipment?.Id)?.Price;
        
        <component type="typeof(NinjaApp.Views.Components.ShopTabPane)"
                   render-mode="Static"
                   param-Category="@category"
                   param-SelectedSlotCategory="@Model.SelectedSlotCategory"
                   param-CurrentEquipment="@currentEquipment"
                   param-SellPrice="@sellPrice"
                   param-NinjaId="@Model.Ninja.Id"
                   param-AllEquipment="@Model.AllEquipment" />
    }
</div>
}

@section Scripts {
    <script>
        function redirectToShop(selectElement) {
            let url = new URL(window.location.href);
            let category = url.searchParams.get('category');
            let ninjaId = selectElement.value;
            if (ninjaId) {
                window.location.href = '/shop?ninjaId=' + ninjaId + (category ? '&category=' + category : '');
            }
        }
        
        function addCategoryToUrl(category) {
            let url = new URL(window.location.href);
            url.searchParams.set('category', category);
            window.history.replaceState({}, '', url);
        }
    </script>
}

